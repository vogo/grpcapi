// +build ignore

// Command makestatic reads a set of files and writes a Go source file to "static.go"
// that declares a map of string constants containing contents of the input files.
// It is intended to be invoked via "go generate" (directive in "gen.go").

package main

import (
	"bytes"
	"fmt"
	"go/format"
	"io/ioutil"
	"os"
	"strings"
)

func main() {
	if err := makestatic(); err != nil {
		fmt.Fprintln(os.Stderr, err)
		os.Exit(1)
	}
}

func makestatic() error {
	f, err := os.Create("static.go")
	if err != nil {
		return err
	}
	defer f.Close()
	buf := new(bytes.Buffer)
	fmt.Fprintf(buf, "%v\n\n%v\n\npackage api\n\n", license, warning)
	fmt.Fprintf(buf, "var ProtoFiles = []string{")
	more := false
	for _, fn := range os.Args[1:] {
		if more {
			fmt.Fprintf(buf, ",")
		}
		if index := strings.LastIndex(fn, "/"); index > 0 {
			fn = fn[index+1:]
		}
		fmt.Fprintf(buf, "\"%s\"", fn)
		more = true
	}
	fmt.Fprintf(buf, "}")
	fmtbuf, err := format.Source(buf.Bytes())
	if err != nil {
		return err
	}
	return ioutil.WriteFile("static.go", fmtbuf, 0666)
}

const warning = `// Code generated by "makestatic"; DO NOT EDIT.`

var license = `// Copyright 2018 The Vogo Authors. All rights reserved.
// Use of this source code is governed by a Apache license
// that can be found in the LICENSE file.
`

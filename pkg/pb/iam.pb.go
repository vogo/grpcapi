// Code generated by protoc-gen-go. DO NOT EDIT.
// source: iam.proto

package pb

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TokenRequest struct {
	GrantType            string   `protobuf:"bytes,1,opt,name=grant_type,json=grantType,proto3" json:"grant_type,omitempty"`
	ClientId             string   `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret         string   `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	Scope                string   `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	Username             string   `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	RefreshToken         string   `protobuf:"bytes,7,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenRequest) Reset()         { *m = TokenRequest{} }
func (m *TokenRequest) String() string { return proto.CompactTextString(m) }
func (*TokenRequest) ProtoMessage()    {}
func (*TokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a2c201915207782, []int{0}
}

func (m *TokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenRequest.Unmarshal(m, b)
}
func (m *TokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenRequest.Marshal(b, m, deterministic)
}
func (m *TokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenRequest.Merge(m, src)
}
func (m *TokenRequest) XXX_Size() int {
	return xxx_messageInfo_TokenRequest.Size(m)
}
func (m *TokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TokenRequest proto.InternalMessageInfo

func (m *TokenRequest) GetGrantType() string {
	if m != nil {
		return m.GrantType
	}
	return ""
}

func (m *TokenRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *TokenRequest) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

func (m *TokenRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *TokenRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *TokenRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *TokenRequest) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

type TokenResponse struct {
	TokenType            string   `protobuf:"bytes,1,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	ExpiresIn            int32    `protobuf:"varint,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	AccessToken          string   `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken         string   `protobuf:"bytes,4,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	IdToken              string   `protobuf:"bytes,5,opt,name=id_token,json=idToken,proto3" json:"id_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenResponse) Reset()         { *m = TokenResponse{} }
func (m *TokenResponse) String() string { return proto.CompactTextString(m) }
func (*TokenResponse) ProtoMessage()    {}
func (*TokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a2c201915207782, []int{1}
}

func (m *TokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenResponse.Unmarshal(m, b)
}
func (m *TokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenResponse.Marshal(b, m, deterministic)
}
func (m *TokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenResponse.Merge(m, src)
}
func (m *TokenResponse) XXX_Size() int {
	return xxx_messageInfo_TokenResponse.Size(m)
}
func (m *TokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TokenResponse proto.InternalMessageInfo

func (m *TokenResponse) GetTokenType() string {
	if m != nil {
		return m.TokenType
	}
	return ""
}

func (m *TokenResponse) GetExpiresIn() int32 {
	if m != nil {
		return m.ExpiresIn
	}
	return 0
}

func (m *TokenResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *TokenResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *TokenResponse) GetIdToken() string {
	if m != nil {
		return m.IdToken
	}
	return ""
}

func init() {
	proto.RegisterType((*TokenRequest)(nil), "grpcapi.TokenRequest")
	proto.RegisterType((*TokenResponse)(nil), "grpcapi.TokenResponse")
}

func init() { proto.RegisterFile("iam.proto", fileDescriptor_0a2c201915207782) }

var fileDescriptor_0a2c201915207782 = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0x41, 0x4e, 0x02, 0x31,
	0x14, 0x86, 0x33, 0xc8, 0x00, 0x53, 0x61, 0xd3, 0xa0, 0x19, 0x50, 0xa2, 0x8e, 0x1b, 0xe3, 0x82,
	0x89, 0xb8, 0x73, 0xe9, 0x8e, 0x85, 0x1b, 0x24, 0x31, 0x71, 0x33, 0x29, 0x33, 0xcf, 0xa1, 0x11,
	0xda, 0xda, 0x16, 0x95, 0xad, 0x57, 0xf0, 0x22, 0xde, 0xc5, 0x1b, 0x18, 0x0f, 0x62, 0xe6, 0xb5,
	0x24, 0x2a, 0xcb, 0xf7, 0xfd, 0x0f, 0xfe, 0x7e, 0x79, 0x43, 0x22, 0xce, 0x96, 0x43, 0xa5, 0xa5,
	0x95, 0xb4, 0x59, 0x6a, 0x95, 0x33, 0xc5, 0xfb, 0x87, 0xa5, 0x94, 0xe5, 0x02, 0x52, 0xa6, 0x78,
	0xca, 0x84, 0x90, 0x96, 0x59, 0x2e, 0x85, 0x71, 0x6b, 0xc9, 0x57, 0x40, 0xda, 0x53, 0xf9, 0x08,
	0x62, 0x02, 0x4f, 0x2b, 0x30, 0x96, 0x0e, 0x08, 0x29, 0x35, 0x13, 0x36, 0xb3, 0x6b, 0x05, 0x71,
	0x70, 0x1c, 0x9c, 0x45, 0x93, 0x08, 0xc9, 0x74, 0xad, 0x80, 0x1e, 0x90, 0x28, 0x5f, 0x70, 0x10,
	0x36, 0xe3, 0x45, 0x5c, 0xc3, 0xb4, 0xe5, 0xc0, 0xb8, 0xa0, 0xa7, 0xa4, 0xe3, 0x43, 0x03, 0xb9,
	0x06, 0x1b, 0xef, 0xe0, 0x42, 0xdb, 0xc1, 0x5b, 0x64, 0xb4, 0x4b, 0x42, 0x93, 0x4b, 0x05, 0x71,
	0x1d, 0x43, 0x37, 0xd0, 0x3e, 0x69, 0xad, 0x0c, 0x68, 0xc1, 0x96, 0x10, 0x87, 0xee, 0x6f, 0x37,
	0x73, 0x95, 0x29, 0x66, 0xcc, 0x8b, 0xd4, 0x45, 0xdc, 0x70, 0xd9, 0x66, 0xae, 0x2a, 0x35, 0x3c,
	0x68, 0x30, 0xf3, 0xcc, 0x56, 0x1a, 0x71, 0xd3, 0x55, 0x7a, 0x88, 0x6a, 0xc9, 0x47, 0x40, 0x3a,
	0x5e, 0xd2, 0x28, 0x29, 0x0c, 0x54, 0x96, 0xb8, 0xfe, 0xc7, 0x12, 0x09, 0x5a, 0x0e, 0x08, 0x81,
	0x57, 0xc5, 0x35, 0x98, 0x8c, 0x0b, 0xd4, 0x0c, 0x27, 0x91, 0x27, 0x63, 0x41, 0x4f, 0x48, 0x9b,
	0xe5, 0x39, 0x18, 0xe3, 0x3b, 0x9d, 0xe6, 0xae, 0x63, 0x58, 0xb4, 0xfd, 0xae, 0xfa, 0xf6, 0xbb,
	0x68, 0x8f, 0xb4, 0x78, 0xe1, 0x73, 0x27, 0xdd, 0xe4, 0x05, 0x46, 0xa3, 0xd2, 0x9f, 0xe5, 0x86,
	0x09, 0x56, 0x82, 0xa6, 0x77, 0x24, 0x74, 0xbf, 0xd9, 0x1b, 0xfa, 0xc3, 0x0e, 0x7f, 0x9f, 0xad,
	0xbf, 0xff, 0x1f, 0x3b, 0xd1, 0xe4, 0xe8, 0xed, 0xf3, 0xfb, 0xbd, 0xd6, 0x4b, 0xba, 0x78, 0xff,
	0xe7, 0x8b, 0x54, 0xb2, 0x95, 0x9d, 0x8f, 0x52, 0x2c, 0xbd, 0x0a, 0xce, 0xaf, 0xeb, 0xf7, 0x35,
	0x35, 0x9b, 0x35, 0xf0, 0x6b, 0xb8, 0xfc, 0x09, 0x00, 0x00, 0xff, 0xff, 0xd6, 0xa3, 0x4d, 0xfe,
	0x41, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TokenManagerClient is the client API for TokenManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TokenManagerClient interface {
	Token(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*TokenResponse, error)
}

type tokenManagerClient struct {
	cc *grpc.ClientConn
}

func NewTokenManagerClient(cc *grpc.ClientConn) TokenManagerClient {
	return &tokenManagerClient{cc}
}

func (c *tokenManagerClient) Token(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*TokenResponse, error) {
	out := new(TokenResponse)
	err := c.cc.Invoke(ctx, "/grpcapi.TokenManager/Token", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TokenManagerServer is the server API for TokenManager service.
type TokenManagerServer interface {
	Token(context.Context, *TokenRequest) (*TokenResponse, error)
}

func RegisterTokenManagerServer(s *grpc.Server, srv TokenManagerServer) {
	s.RegisterService(&_TokenManager_serviceDesc, srv)
}

func _TokenManager_Token_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenManagerServer).Token(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcapi.TokenManager/Token",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenManagerServer).Token(ctx, req.(*TokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TokenManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcapi.TokenManager",
	HandlerType: (*TokenManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Token",
			Handler:    _TokenManager_Token_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "iam.proto",
}
